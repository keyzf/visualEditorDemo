{"ast":null,"code":"import _classCallCheck from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/yuanxiaoyu/Desktop/editer/src/components/features/boxItem.js\";\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { ConnectDragSource, ConnectDropTarget, DragSource, DragSourceConnector, DragSourceMonitor, DropTarget, DropTargetConnector, DropTargetMonitor, XYCoord } from 'react-dnd';\nimport './boxItem.scss';\nvar source = {\n  beginDrag: function beginDrag(props) {\n    return _objectSpread({}, props);\n  },\n  isDragging: function isDragging(props, monitor) {\n    return props.id === monitor.getItem().id;\n  }\n};\nvar target = {\n  canDrop: function canDrop(props, monitor) {\n    return true;\n  },\n  drop: function drop(props, monitor, component) {\n    var delta = monitor.getDifferenceFromInitialOffset();\n    console.log(delta);\n    props.move(delta.x, delta.y);\n  }\n};\nvar TYPE = 'ITEM';\n\nvar BoxCmp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BoxCmp, _React$Component);\n\n  function BoxCmp() {\n    _classCallCheck(this, BoxCmp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BoxCmp).apply(this, arguments));\n  }\n\n  _createClass(BoxCmp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          connectDropTarget = _this$props.connectDropTarget,\n          connectDragSource = _this$props.connectDragSource,\n          x = _this$props.x,\n          y = _this$props.y;\n      return connectDropTarget(connectDragSource(React.createElement(\"div\", {\n        className: \"box-feature\",\n        style: {\n          left: x,\n          top: y\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BoxCmp;\n}(React.Component);\n\nvar Box = DropTarget(TYPE, target, function (connect) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n})(DragSource(TYPE, source, function (connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n})(BoxCmp));\nexport default Box;","map":{"version":3,"sources":["/Users/yuanxiaoyu/Desktop/editer/src/components/features/boxItem.js"],"names":["React","findDOMNode","ConnectDragSource","ConnectDropTarget","DragSource","DragSourceConnector","DragSourceMonitor","DropTarget","DropTargetConnector","DropTargetMonitor","XYCoord","source","beginDrag","props","isDragging","monitor","id","getItem","target","canDrop","drop","component","delta","getDifferenceFromInitialOffset","console","log","move","x","y","TYPE","BoxCmp","connectDropTarget","connectDragSource","left","top","Component","Box","connect","dropTarget","dragSource"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SACIC,iBADJ,EAEIC,iBAFJ,EAGIC,UAHJ,EAIIC,mBAJJ,EAKIC,iBALJ,EAMIC,UANJ,EAOIC,mBAPJ,EAQIC,iBARJ,EASIC,OATJ,QAUO,WAVP;AAWA,OAAO,gBAAP;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,SADW,qBACDC,KADC,EACM;AACb,6BACOA,KADP;AAGH,GALU;AAMXC,EAAAA,UANW,sBAMAD,KANA,EAMOE,OANP,EAMgB;AACvB,WAAOF,KAAK,CAACG,EAAN,KAAaD,OAAO,CAACE,OAAR,GAAkBD,EAAtC;AACH;AARU,CAAf;AAYA,IAAME,MAAM,GAAG;AACXC,EAAAA,OADW,mBACHN,KADG,EACIE,OADJ,EACa;AACpB,WAAO,IAAP;AACH,GAHU;AAIXK,EAAAA,IAJW,gBAINP,KAJM,EAICE,OAJD,EAIUM,SAJV,EAIqB;AAE5B,QAAMC,KAAK,GAACP,OAAO,CAACQ,8BAAR,EAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAT,IAAAA,KAAK,CAACa,IAAN,CAAWJ,KAAK,CAACK,CAAjB,EAAmBL,KAAK,CAACM,CAAzB;AAEH;AAVU,CAAf;AAeA,IAAMC,IAAI,GAAG,MAAb;;IAEMC,M;;;;;;;;;;;;;6BACO;AAAA,wBACgD,KAAKjB,KADrD;AAAA,UACGkB,iBADH,eACGA,iBADH;AAAA,UACsBC,iBADtB,eACsBA,iBADtB;AAAA,UACwCL,CADxC,eACwCA,CADxC;AAAA,UAC0CC,CAD1C,eAC0CA,CAD1C;AAEL,aAAOG,iBAAiB,CAChBC,iBAAiB,CACb;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAACN,CAAN;AAAQO,UAAAA,GAAG,EAACN;AAAZ,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADa,CADD,CAAxB;AAKH;;;;EARgB5B,KAAK,CAACmC,S;;AAU3B,IAAMC,GAAG,GAAG7B,UAAU,CAACsB,IAAD,EAAOX,MAAP,EAAe,UAACmB,OAAD;AAAA,SAAc;AAC/CN,IAAAA,iBAAiB,EAAEM,OAAO,CAACC,UAAR;AAD4B,GAAd;AAAA,CAAf,CAAV,CAERlC,UAAU,CAACyB,IAAD,EAAOlB,MAAP,EAAe,UAAC0B,OAAD,EAAUtB,OAAV;AAAA,SAAuB;AAChDiB,IAAAA,iBAAiB,EAAEK,OAAO,CAACE,UAAR,EAD6B;AAEhDzB,IAAAA,UAAU,EAAEC,OAAO,CAACD,UAAR;AAFoC,GAAvB;AAAA,CAAf,CAAV,CAGAgB,MAHA,CAFQ,CAAZ;AAOA,eAAeM,GAAf","sourcesContent":["import React from 'react'\nimport { findDOMNode } from 'react-dom';\nimport {\n    ConnectDragSource,\n    ConnectDropTarget,\n    DragSource,\n    DragSourceConnector,\n    DragSourceMonitor,\n    DropTarget,\n    DropTargetConnector,\n    DropTargetMonitor,\n    XYCoord\n} from 'react-dnd'\nimport './boxItem.scss'\n\nconst source = {\n    beginDrag(props) {\n        return {\n            ...props\n        }\n    },\n    isDragging(props, monitor) {\n        return props.id === monitor.getItem().id\n    }\n}\n\n\nconst target = {\n    canDrop(props, monitor) {\n        return true\n    },\n    drop(props, monitor, component) {\n        \n        const delta=monitor.getDifferenceFromInitialOffset()\n        console.log(delta)\n        props.move(delta.x,delta.y)\n\t\n    }\n\n}\n\n\nconst TYPE = 'ITEM'\n\nclass BoxCmp extends React.Component{\n    render() {\n        const { connectDropTarget, connectDragSource,x,y } = this.props;\n        return connectDropTarget(\n                connectDragSource(\n                    <div className='box-feature' style={{left:x,top:y}} />\n                )\n            )\n    }\n}\nconst Box = DropTarget(TYPE, target, (connect) => ({\n    connectDropTarget: connect.dropTarget()\n}))(DragSource(TYPE, source, (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n}))(BoxCmp))\n\nexport default Box"]},"metadata":{},"sourceType":"module"}