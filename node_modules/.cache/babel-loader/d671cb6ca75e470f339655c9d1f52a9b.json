{"ast":null,"code":"import _objectSpread from \"/Users/yuanxiaoyu/Desktop/visualEditorDemo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/*\n * @Author: zengjian \n * @Date: 2018-12-10 19:22:03 \n * @Last Modified by: yuanxy\n * @Last Modified time: 2018-12-17 23:42:27\n */\nimport update from 'immutability-helper';\nvar initialState = {\n  comps: [{\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    id: 1,\n    background: 'red',\n    type: 'bar'\n  }, {\n    x: 0,\n    y: 0,\n    width: 50,\n    height: 100,\n    id: 2,\n    background: 'green'\n  }, {\n    x: 200,\n    y: 200,\n    width: 110,\n    height: 100,\n    id: 3,\n    background: 'yellow'\n  }]\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'add':\n      var id = state.comps.reduce(function (a, b) {\n        return a.id > b.id ? a.id : b.id;\n      }) + 1;\n      var comp = {\n        x: 0,\n        y: 0,\n        width: 80,\n        height: 80,\n        background: '#ff6600',\n        id: id\n      };\n      return update(state, {\n        comps: {\n          $push: [comp]\n        }\n      });\n    //{...state,comps:state.comps.concat(comp)}\n\n    case 'move':\n      var newComps = state.comps.map(function (c) {\n        if (c.id === action.payload.id) {\n          return _objectSpread({}, c, action.payload);\n        }\n\n        return c;\n      });\n      return _objectSpread({}, state, {\n        comps: newComps\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yuanxiaoyu/Desktop/visualEditorDemo/src/reducer/componentReducer.js"],"names":["update","initialState","comps","x","y","width","height","id","background","type","reducer","state","action","reduce","a","b","comp","$push","newComps","map","c","payload"],"mappings":";;AAAA;;;;;;AAMA,OAAOA,MAAP,MAAmB,qBAAnB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CAAC;AACJC,IAAAA,CAAC,EAAE,CADC;AAEJC,IAAAA,CAAC,EAAE,CAFC;AAGJC,IAAAA,KAAK,EAAE,GAHH;AAIJC,IAAAA,MAAM,EAAE,GAJJ;AAKJC,IAAAA,EAAE,EAAE,CALA;AAMJC,IAAAA,UAAU,EAAC,KANP;AAOJC,IAAAA,IAAI,EAAC;AAPD,GAAD,EAQJ;AACCN,IAAAA,CAAC,EAAE,CADJ;AAECC,IAAAA,CAAC,EAAE,CAFJ;AAGCC,IAAAA,KAAK,EAAE,EAHR;AAICC,IAAAA,MAAM,EAAE,GAJT;AAKCC,IAAAA,EAAE,EAAE,CALL;AAMCC,IAAAA,UAAU,EAAC;AANZ,GARI,EAeL;AACEL,IAAAA,CAAC,EAAE,GADL;AAEEC,IAAAA,CAAC,EAAE,GAFL;AAGEC,IAAAA,KAAK,EAAE,GAHT;AAIEC,IAAAA,MAAM,EAAE,GAJV;AAKEC,IAAAA,EAAE,EAAE,CALN;AAMEC,IAAAA,UAAU,EAAC;AANb,GAfK;AADQ,CAAnB;;AA2BA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AAC9C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,KAAL;AACI,UAAMF,EAAE,GAAEI,KAAK,CAACT,KAAN,CAAYW,MAAZ,CAAmB,UAACC,CAAD,EAAGC,CAAH;AAAA,eAAOD,CAAC,CAACP,EAAF,GAAKQ,CAAC,CAACR,EAAP,GAAUO,CAAC,CAACP,EAAZ,GAAeQ,CAAC,CAACR,EAAxB;AAAA,OAAnB,IAA+C,CAAzD;AACA,UAAMS,IAAI,GAAC;AACPb,QAAAA,CAAC,EAAC,CADK;AAEPC,QAAAA,CAAC,EAAC,CAFK;AAGPC,QAAAA,KAAK,EAAC,EAHC;AAIPC,QAAAA,MAAM,EAAC,EAJA;AAKPE,QAAAA,UAAU,EAAC,SALJ;AAMPD,QAAAA,EAAE,EAACA;AANI,OAAX;AAQA,aAAOP,MAAM,CAACW,KAAD,EAAO;AAChBT,QAAAA,KAAK,EAAC;AACFe,UAAAA,KAAK,EAAC,CAACD,IAAD;AADJ;AADU,OAAP,CAAb;AAIG;;AAEP,SAAK,MAAL;AACI,UAAME,QAAQ,GAAGP,KAAK,CAACT,KAAN,CAAYiB,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AAClC,YAAIA,CAAC,CAACb,EAAF,KAASK,MAAM,CAACS,OAAP,CAAed,EAA5B,EAAgC;AAC5B,mCACOa,CADP,EAEOR,MAAM,CAACS,OAFd;AAIH;;AACD,eAAOD,CAAP;AACH,OARgB,CAAjB;AASA,+BAAYT,KAAZ;AAAmBT,QAAAA,KAAK,EAAEgB;AAA1B;;AAEJ;AACI,aAAOP,KAAP;AA9BR;AAgCH,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["/*\n * @Author: zengjian \n * @Date: 2018-12-10 19:22:03 \n * @Last Modified by: yuanxy\n * @Last Modified time: 2018-12-17 23:42:27\n */\nimport update from 'immutability-helper';\n\n\nlet initialState = {\n    comps: [{\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100,\n        id: 1,\n        background:'red',\n        type:'bar'\n    }, {\n        x: 0,\n        y: 0,\n        width: 50,\n        height: 100,\n        id: 2,\n        background:'green'\n    },{\n        x: 200,\n        y: 200,\n        width: 110,\n        height: 100,\n        id: 3,\n        background:'yellow'\n    }],\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'add':\n            const id= state.comps.reduce((a,b)=>a.id>b.id?a.id:b.id)+1\n            const comp={\n                x:0,\n                y:0,\n                width:80,\n                height:80,\n                background:'#ff6600',\n                id:id\n            }\n            return update(state,{\n                comps:{\n                    $push:[comp]\n                }\n            }) //{...state,comps:state.comps.concat(comp)}\n           \n        case 'move':\n            const newComps = state.comps.map(c => {\n                if (c.id === action.payload.id) {\n                    return {\n                        ...c,\n                        ...action.payload\n                    }\n                }\n                return c\n            })\n            return { ...state, comps: newComps }\n            \n        default:\n            return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}