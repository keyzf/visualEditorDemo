{"ast":null,"code":"import _classCallCheck from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/yuanxiaoyu/Desktop/editer/src/components/features/boxItem.js\";\nimport React from 'react';\nimport { ConnectDragSource, ConnectDropTarget, DragSource, DragSourceConnector, DragSourceMonitor, DropTarget, DropTargetConnector, DropTargetMonitor, XYCoord } from 'react-dnd';\nimport './boxItem.scss';\nvar source = {\n  beginDrag: function beginDrag(props) {\n    return _objectSpread({}, props);\n  },\n  isDragging: function isDragging(props, monitor) {\n    return props.id === monitor.getItem().id;\n  }\n};\nvar target = {\n  canDrop: function canDrop(props, monitor) {\n    return true;\n  },\n  drop: function drop(props, monitor, component) {\n    //const { id: draggedId } = monitor.getItem();\n    //const { id: dropId } = props;\n    var item = monitor.getItem();\n    var delta = XYCoord(monitor.getDifferenceFromInitialOffset());\n    var left = Math.round(item.left + delta.x);\n    var top = Math.round(item.top + delta.y);\n    props.move(left, top); //console.log(monitor.getItem())\n    // props.move(draggedId, dropId);\n  }\n};\nvar TYPE = 'ITEM';\n\nvar BoxCmp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BoxCmp, _React$Component);\n\n  function BoxCmp() {\n    _classCallCheck(this, BoxCmp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BoxCmp).apply(this, arguments));\n  }\n\n  _createClass(BoxCmp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          connectDropTarget = _this$props.connectDropTarget,\n          connectDragSource = _this$props.connectDragSource;\n      return connectDropTarget(connectDragSource(React.createElement(\"div\", {\n        className: \"box-feature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BoxCmp;\n}(React.Component);\n\nvar Box = DropTarget(TYPE, target, function (connect) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n})(DragSource(TYPE, source, function (connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n})(BoxCmp));\nexport default Box;","map":{"version":3,"sources":["/Users/yuanxiaoyu/Desktop/editer/src/components/features/boxItem.js"],"names":["React","ConnectDragSource","ConnectDropTarget","DragSource","DragSourceConnector","DragSourceMonitor","DropTarget","DropTargetConnector","DropTargetMonitor","XYCoord","source","beginDrag","props","isDragging","monitor","id","getItem","target","canDrop","drop","component","item","delta","getDifferenceFromInitialOffset","left","Math","round","x","top","y","move","TYPE","BoxCmp","connectDropTarget","connectDragSource","Component","Box","connect","dropTarget","dragSource"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,iBADJ,EAEIC,iBAFJ,EAGIC,UAHJ,EAIIC,mBAJJ,EAKIC,iBALJ,EAMIC,UANJ,EAOIC,mBAPJ,EAQIC,iBARJ,EASIC,OATJ,QAUO,WAVP;AAWA,OAAO,gBAAP;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,SADW,qBACDC,KADC,EACM;AACb,6BACOA,KADP;AAGH,GALU;AAMXC,EAAAA,UANW,sBAMAD,KANA,EAMOE,OANP,EAMgB;AACvB,WAAOF,KAAK,CAACG,EAAN,KAAaD,OAAO,CAACE,OAAR,GAAkBD,EAAtC;AACH;AARU,CAAf;AAYA,IAAME,MAAM,GAAG;AACXC,EAAAA,OADW,mBACHN,KADG,EACIE,OADJ,EACa;AACpB,WAAO,IAAP;AACH,GAHU;AAIXK,EAAAA,IAJW,gBAINP,KAJM,EAICE,OAJD,EAIUM,SAJV,EAIqB;AAC5B;AACA;AACA,QAAMC,IAAI,GAAGP,OAAO,CAACE,OAAR,EAAb;AACA,QAAMM,KAAK,GAAGb,OAAO,CAACK,OAAO,CAACS,8BAAR,EAAD,CAArB;AACN,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACG,IAAL,GAAYF,KAAK,CAACK,CAA7B,CAAb;AACA,QAAMC,GAAG,GAAGH,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACO,GAAL,GAAWN,KAAK,CAACO,CAA5B,CAAZ;AAEMjB,IAAAA,KAAK,CAACkB,IAAN,CAAWN,IAAX,EAAgBI,GAAhB,EAR4B,CAS5B;AAEA;AACH;AAhBU,CAAf;AAqBA,IAAMG,IAAI,GAAG,MAAb;;IAEMC,M;;;;;;;;;;;;;6BACO;AAAA,wBAC4C,KAAKpB,KADjD;AAAA,UACGqB,iBADH,eACGA,iBADH;AAAA,UACsBC,iBADtB,eACsBA,iBADtB;AAEL,aAAOD,iBAAiB,CAChBC,iBAAiB,CACb;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADa,CADD,CAAxB;AAKH;;;;EARgBlC,KAAK,CAACmC,S;;AAU3B,IAAMC,GAAG,GAAG9B,UAAU,CAACyB,IAAD,EAAOd,MAAP,EAAe,UAACoB,OAAD;AAAA,SAAc;AAC/CJ,IAAAA,iBAAiB,EAAEI,OAAO,CAACC,UAAR;AAD4B,GAAd;AAAA,CAAf,CAAV,CAERnC,UAAU,CAAC4B,IAAD,EAAOrB,MAAP,EAAe,UAAC2B,OAAD,EAAUvB,OAAV;AAAA,SAAuB;AAChDoB,IAAAA,iBAAiB,EAAEG,OAAO,CAACE,UAAR,EAD6B;AAEhD1B,IAAAA,UAAU,EAAEC,OAAO,CAACD,UAAR;AAFoC,GAAvB;AAAA,CAAf,CAAV,CAGAmB,MAHA,CAFQ,CAAZ;AAOA,eAAeI,GAAf","sourcesContent":["import React from 'react'\nimport {\n    ConnectDragSource,\n    ConnectDropTarget,\n    DragSource,\n    DragSourceConnector,\n    DragSourceMonitor,\n    DropTarget,\n    DropTargetConnector,\n    DropTargetMonitor,\n    XYCoord\n} from 'react-dnd'\nimport './boxItem.scss'\n\nconst source = {\n    beginDrag(props) {\n        return {\n            ...props\n        }\n    },\n    isDragging(props, monitor) {\n        return props.id === monitor.getItem().id\n    }\n}\n\n\nconst target = {\n    canDrop(props, monitor) {\n        return true\n    },\n    drop(props, monitor, component) {\n        //const { id: draggedId } = monitor.getItem();\n        //const { id: dropId } = props;\n        const item = monitor.getItem()\n        const delta = XYCoord(monitor.getDifferenceFromInitialOffset())\n\t\tconst left = Math.round(item.left + delta.x)\n\t\tconst top = Math.round(item.top + delta.y)\n\n        props.move(left,top)\n        //console.log(monitor.getItem())\n       \n        // props.move(draggedId, dropId);\n    }\n\n}\n\n\nconst TYPE = 'ITEM'\n\nclass BoxCmp extends React.Component{\n    render() {\n        const { connectDropTarget, connectDragSource } = this.props;\n        return connectDropTarget(\n                connectDragSource(\n                    <div className='box-feature' />\n                )\n            )\n    }\n}\nconst Box = DropTarget(TYPE, target, (connect) => ({\n    connectDropTarget: connect.dropTarget()\n}))(DragSource(TYPE, source, (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n}))(BoxCmp))\n\nexport default Box"]},"metadata":{},"sourceType":"module"}