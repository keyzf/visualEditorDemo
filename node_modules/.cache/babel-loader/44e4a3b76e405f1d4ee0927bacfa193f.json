{"ast":null,"code":"import _objectSpread from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/*\n * @Author: zengjian \n * @Date: 2018-12-10 19:22:03 \n * @Last Modified by: yuanxy\n * @Last Modified time: 2018-12-16 19:19:19\n */\nvar initialState = {\n  comps: [{\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }]\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'move':\n      var newState = state.comps.map(function (c) {\n        if (c.id === action.payload.id) {\n          return _objectSpread({}, c, action.payload);\n        }\n      });\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yuanxiaoyu/Desktop/editer/src/reducer/componentReducer.js"],"names":["initialState","comps","x","y","width","height","reducer","state","action","type","newState","map","c","id","payload"],"mappings":";;AAAA;;;;;;AAMA,IAAIA,YAAY,GAAG;AAChBC,EAAAA,KAAK,EAAC,CAAC;AACHC,IAAAA,CAAC,EAAC,CADC;AAEHC,IAAAA,CAAC,EAAC,CAFC;AAGHC,IAAAA,KAAK,EAAC,CAHH;AAIHC,IAAAA,MAAM,EAAC;AAJJ,GAAD;AADU,CAAnB;;AAUA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,MAAL;AACI,UAAMC,QAAQ,GAACH,KAAK,CAACN,KAAN,CAAYU,GAAZ,CAAgB,UAAAC,CAAC,EAAE;AAC9B,YAAGA,CAAC,CAACC,EAAF,KAAOL,MAAM,CAACM,OAAP,CAAeD,EAAzB,EAA4B;AACxB,mCACOD,CADP,EAEOJ,MAAM,CAACM,OAFd;AAIH;AACJ,OAPc,CAAf;AAQA,aAAOJ,QAAP;;AACJ;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["/*\n * @Author: zengjian \n * @Date: 2018-12-10 19:22:03 \n * @Last Modified by: yuanxy\n * @Last Modified time: 2018-12-16 19:19:19\n */\nlet initialState = {\n   comps:[{\n       x:0,\n       y:0,\n       width:0,\n       height:0\n   }],\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'move':\n            const newState=state.comps.map(c=>{\n                if(c.id===action.payload.id){\n                    return {\n                        ...c,\n                        ...action.payload\n                    }\n                }\n            })\n            return newState\n        default:\n            return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}