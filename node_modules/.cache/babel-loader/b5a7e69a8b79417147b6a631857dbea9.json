{"ast":null,"code":"import _objectSpread from \"/Users/yuanxiaoyu/Desktop/editer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/*\n * @Author: zengjian \n * @Date: 2018-12-10 19:22:03 \n * @Last Modified by: yuanxy\n * @Last Modified time: 2018-12-16 19:35:53\n */\nvar initialState = {\n  comps: [{\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    id: 1\n  }]\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'move':\n      return state.comps.map(function (c) {\n        if (c.id === action.payload.id) {\n          return _objectSpread({}, c, action.payload);\n        }\n\n        return c;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yuanxiaoyu/Desktop/editer/src/reducer/componentReducer.js"],"names":["initialState","comps","x","y","width","height","id","reducer","state","action","type","map","c","payload"],"mappings":";;AAAA;;;;;;AAMA,IAAIA,YAAY,GAAG;AAChBC,EAAAA,KAAK,EAAC,CAAC;AACHC,IAAAA,CAAC,EAAC,CADC;AAEHC,IAAAA,CAAC,EAAC,CAFC;AAGHC,IAAAA,KAAK,EAAC,GAHH;AAIHC,IAAAA,MAAM,EAAC,GAJJ;AAKHC,IAAAA,EAAE,EAAC;AALA,GAAD;AADU,CAAnB;;AAWA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,MAAL;AACI,aAAOF,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgB,UAAAC,CAAC,EAAE;AACtB,YAAGA,CAAC,CAACN,EAAF,KAAOG,MAAM,CAACI,OAAP,CAAeP,EAAzB,EAA4B;AACxB,mCACOM,CADP,EAEOH,MAAM,CAACI,OAFd;AAIH;;AACD,eAAOD,CAAP;AACH,OARM,CAAP;;AAUJ;AACI,aAAOJ,KAAP;AAbR;AAeH,CAhBD;;AAkBA,eAAeD,OAAf","sourcesContent":["/*\n * @Author: zengjian \n * @Date: 2018-12-10 19:22:03 \n * @Last Modified by: yuanxy\n * @Last Modified time: 2018-12-16 19:35:53\n */\nlet initialState = {\n   comps:[{\n       x:0,\n       y:0,\n       width:100,\n       height:100,\n       id:1\n   }],\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'move':\n            return state.comps.map(c=>{\n                if(c.id===action.payload.id){\n                    return {\n                        ...c,\n                        ...action.payload\n                    }\n                }\n                return c\n            })\n            \n        default:\n            return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}